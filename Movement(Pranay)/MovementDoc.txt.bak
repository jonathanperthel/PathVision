High Level Movement Commands: (comm.h)

uint8_t levelFlag;
uint16_t commVersion;
uint16_t robotID;
uint32_t SN;
uint8_t bandWidth;
uint8_t mode;                       // 0. idle, default stand  1. force stand (controlled by dBodyHeight + ypr)
				    // 2. target velocity walking (controlled by velocity + yawSpeed)
				    // 3. target position walking (controlled by position + ypr[0])
				    // 4. path mode walking (reserve for future release)
				    // 5. position stand down. 
                                    // 6. position stand up 
                                    // 7. damping mode 
	                            // 8. recovery stand
	           		    // 9. backflip
 				    // 10. jumpYaw
				    // 11. straightHand
                                    // 12. dance1
				    // 13. dance2
											
uint8_t gaitType;                  // 0.idle  1.trot  2.trot running  3.climb stair
uint8_t speedLevel;                // 0. default low speed. 1. medium speed 2. high speed. during walking, only respond MODE 3
float footRaiseHeight;             // (unit: m, default: 0.08m), foot up height while walking
float bodyHeight;                  // (unit: m, default: 0.28m),
float postion[2];                  // (unit: m), desired position in inertial frame
float euler[3];                    // (unit: rad), roll pitch yaw in stand mode
float velocity[2];                 // (unit: m/s), forwardSpeed, sideSpeed in body frame
float yawSpeed;                    // (unit: rad/s), rotateSpeed in body frame
LED led[4];
uint8_t wirelessRemote[40];
uint32_t reserve;
uint32_t crc;

Joystick Inputs: (unitree_joystick.h)
For changing between autonomus mode and controller mode if needed.
16 Bytes each
R1, L1, start, select, R2, L2, F1, F2, A, B, X, Y, up, right, down, left

40- Byte (store multiple int in indidual switch)
lx, rx, ry, L2, ly